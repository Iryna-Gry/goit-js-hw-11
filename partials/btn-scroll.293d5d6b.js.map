{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EASMC,EAAeC,SAASC,cAAc,eACtCC,EAAUF,SAASG,eAAe,eAClCC,EAAcJ,SAASC,cAAc,cACrCI,EAAmBL,SAASC,cAAc,wBAEhDG,EAAYE,QAAS,EACrB,IAAIC,EAAO,EAEPC,EAAa,EACbC,EAAU,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CAChDC,aAAc,MAEZC,EAAY,EACVC,EAAS,CACbC,EAAG,GACHC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,KAAM,GACNC,SAZY,I,SAcCC,I,OAAAA,EAAfX,EAAAb,EAAA,CAAAa,EAAAY,GAAAC,MAAA,SAAAC,EAAiCC,G,qEAC/BA,EAAIC,iBACJ3B,EAAa4B,UAAY,GACzBpB,EAAO,EACPO,EAAOK,KAAOZ,EACdO,EAAOC,EAAIU,EAAIG,cAAcC,SAASC,YAAYC,MAAMC,OACvC,KAAblB,EAAOC,EAAQ,C,sBACjBX,EAAYE,QAAS,E,2CAGjB2B,EAAanB,G,QACnBoB,IACAhC,EAAQiC,Q,6CAZsBC,MAAAC,KAAAC,U,UAcjBL,EAAaM,G,OAAbC,EAAYJ,MAAAC,KAAAC,U,UAAZE,I,OAAAA,EAAf9B,EAAAb,EAAA,CAAAa,EAAAY,GAAAC,MAAA,SAAAC,EAA4Be,G,IAQlBE,E,qEAPRC,QAAQC,IAAI9B,GACM,IAAdA,EAAe,C,sBACjBR,EAAiBsB,UAAY,GAC7BiB,EAAAC,OAAOC,KAAK,8D,oDAIW,EAAAC,EAAAC,SAAYT,G,UAEX,OAFlBE,EAAQQ,EAAAC,MAEDC,OAAc,C,uBACzB/C,EAAYE,QAAS,E,kBACdsC,EAAAC,OAAOO,QACZ,6E,eAGJ5C,EAAa6C,KAAKC,KAAKb,EAASc,KAAKC,UA5C3B,IA6CVpD,EAAYE,QAAS,E,UACfmD,EAAahB,G,iCACZ,CAAEc,Y,qCAEY,MAAjBN,EAAAS,GAAMP,OAAc,C,uBACtB/C,EAAYE,QAAS,EACrBsC,EAAAC,OAAOO,QACL,4EAEFrD,EAAa4B,UAAY,G,8EA1BJS,MAAAC,KAAAC,U,UAkCZmB,EAAahB,G,OAAbkB,EAAYvB,MAAAC,KAAAC,U,UAAZqB,I,OAAAA,EAAfjD,EAAAb,EAAA,CAAAa,EAAAY,GAAAC,MAAA,SAAAC,EAA4BiB,G,8EAC1B1C,E,UAAmD,EAAA6D,EAAAZ,SAAaP,G,sBAAhEQ,EAAAS,GAAaG,mBAAkBC,KAAAb,EAAAS,GAAC,YAAWT,EAAAc,IACvB,IAAhBjD,EAAOK,KAAU,C,wCACZyB,EAAAC,OAAOmB,QACZ,qBAA6CC,OAAxBxB,EAASc,KAAKC,UAAU,a,4CAJxBpB,MAAAC,KAAAC,U,CAe3B,SAASJ,IACPzB,EAAU,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CAC5CC,aAAc,K,CApBlB,IAAIF,EAAAwD,GAAJ,CAAelE,SAASmE,iBAAkB,CACxCC,QAAS,KASXlE,EAAQmE,iBAAiB,U,SAvDQ5C,G,OAAlBJ,EAAiBe,MAAAC,KAAAC,U,IAwDhClC,EAAYiE,iBAAiB,QAAS3D,EAAAb,EAAA,CAAAa,EAAAY,GAAAC,MAAA,SAAAC,I,yEACpCV,EAAOK,MAAQ,EACfN,EAAYL,EAAaM,EAAOK,KAAO,E,SACjCc,EAAanB,G,OACnBL,EAAQ6D,QAAQ,uB","sources":["src/js/btn-scroll.js"],"sourcesContent":["import '../css/styles.css';\nimport fetchImages from './fetchImages.js';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport createMarkup from './create-markup';\nimport OnlyScroll from 'only-scrollbar';\nconst DEBOUNCE_DELAY = 300;\n// const inputRef = document.getElementById('search-box');\nconst imageListRef = document.querySelector('div.gallery');\nconst formRef = document.getElementById('search-form');\nconst loadMoreBtn = document.querySelector('.load-more');\nconst loadContainerRef = document.querySelector('div.button-container');\n\nloadMoreBtn.hidden = true;\nlet page = 1;\nlet perPage = 40;\nlet totalPages = 1;\nlet gallery = new SimpleLightbox('.photo-card a', {\n  captionDelay: 250,\n});\nlet pagesLeft = 1;\nconst params = {\n  q: '',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n  page: '',\n  per_page: perPage,\n};\nasync function invokeResponseSet(evt) {\n  evt.preventDefault();\n  imageListRef.innerHTML = '';\n  page = 1;\n  params.page = page;\n  params.q = evt.currentTarget.elements.searchQuery.value.trim();\n  if (params.q === '') {\n    loadMoreBtn.hidden = true;\n    return;\n  }\n  await renderImages(params);\n  createSimpleLightBox();\n  formRef.reset();\n}\nasync function renderImages(params) {\n  console.log(pagesLeft);\n  if (pagesLeft === 0) {\n    loadContainerRef.innerHTML = '';\n    Notify.info(\"We're sorry, but you've reached the end of search results.\");\n    return;\n  }\n  try {\n    const response = await fetchImages(params);\n\n    if (response.status !== 200) {\n      loadMoreBtn.hidden = true;\n      return Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n    totalPages = Math.ceil(response.data.totalHits / perPage);\n    loadMoreBtn.hidden = false;\n    await appendMarkup(response);\n    return { data };\n  } catch (error) {\n    if (error.status === 404) {\n      loadMoreBtn.hidden = true;\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      imageListRef.innerHTML = '';\n      return;\n    }\n  }\n}\nnew OnlyScroll(document.scrollingElement, {\n  damping: 0.6,\n});\nasync function appendMarkup(response) {\n  imageListRef.insertAdjacentHTML('beforeend', await createMarkup(response));\n  if (params.page === 1)\n    return Notify.success(\n      `Hoorray! We found ${response.data.totalHits} images`\n    );\n}\nformRef.addEventListener('submit', invokeResponseSet);\nloadMoreBtn.addEventListener('click', async () => {\n  params.page += 1;\n  pagesLeft = totalPages - params.page + 1;\n  await renderImages(params);\n  gallery.refresh('show.simplelightbox');\n});\n\nfunction createSimpleLightBox() {\n  gallery = new SimpleLightbox('.photo-card a', {\n    captionDelay: 250,\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$98e890d835f55cb0$var$imageListRef","document","querySelector","$98e890d835f55cb0$var$formRef","getElementById","$98e890d835f55cb0$var$loadMoreBtn","$98e890d835f55cb0$var$loadContainerRef","hidden","$98e890d835f55cb0$var$page","$98e890d835f55cb0$var$totalPages","$98e890d835f55cb0$var$gallery","$parcel$interopDefault","$5IjG7","captionDelay","$98e890d835f55cb0$var$pagesLeft","$98e890d835f55cb0$var$params","q","image_type","orientation","safesearch","page","per_page","$98e890d835f55cb0$var$_invokeResponseSet","$2TvXO","mark","_callee","evt","preventDefault","innerHTML","currentTarget","elements","searchQuery","value","trim","$98e890d835f55cb0$var$renderImages","$98e890d835f55cb0$var$createSimpleLightBox","reset","apply","this","arguments","params1","$98e890d835f55cb0$var$_renderImages","response","console","log","$h6c0i","Notify","info","$iwbpK","default","_ctx","sent","status","failure","Math","ceil","data","totalHits","$98e890d835f55cb0$var$appendMarkup","t0","$98e890d835f55cb0$var$_appendMarkup","$dI30Z","insertAdjacentHTML","call","t1","success","concat","$1cIlU","scrollingElement","damping","addEventListener","refresh"],"version":3,"file":"btn-scroll.293d5d6b.js.map"}